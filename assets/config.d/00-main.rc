method.insert = cfg.download, private|const|string, (cat,(cfg.basedir),"/download")
method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),".session/")
method.insert = cfg.watch,    private|const|string, (cat,(cfg.basedir),"/watch")

execute.throw = sh, -c, (cat,\
    "mkdir -p \"",(cfg.watch),"/load\" ",\
    "\"",(cfg.watch),"/start\" ")

session.use_lock.set = no

network.port_range.set = 50000-50000
network.port_random.set = no

trackers.use_udp.set = no

throttle.max_uploads.set = 100
throttle.max_uploads.global.set = 250

throttle.min_peers.normal.set = 20
throttle.max_peers.normal.set = 60
throttle.min_peers.seed.set = 30
throttle.max_peers.seed.set = 80
trackers.numwant.set = 80

protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300

pieces.memory.max.set = 512M
network.xmlrpc.size_limit.set = 16M

session.path.set = (cat, (cfg.session))
directory.default.set = (cat, (cfg.download))
execute.nothrow = sh, -c, (cat, "echo >",\
    (session.path), "rtorrent.pid", " ",(system.pid))

encoding.add = utf8
system.umask.set = 0027
system.cwd.set = (directory.default)

network.http.dns_cache_timeout.set = 25
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 1000M))
#pieces.hash.on_completion.set = no
#view.sort_current = seeding, greater=d.ratio=
#keys.layout.set = qwerty
#network.http.capath.set = "/etc/ssl/certs"
#network.http.ssl_verify_peer.set = 0
#network.http.ssl_verify_host.set = 0

method.insert = system.startup_time, value|const, (system.time)
method.insert = d.data_path, simple,\
    "if=(d.is_multi_file),\
        (cat, (d.directory), /),\
        (cat, (d.directory), /, (d.name))"
method.insert = d.session_file, simple, "cat=(session.path), (d.hash), .torrent"

schedule2 = watch_load, 11, 10, ((load.verbose, (cat, (cfg.watch), "load/*.torrent")))
schedule2 = watch_start, 10, 10, ((load.start_verbose, (cat, (cfg.watch), "start/*.torrent")))
